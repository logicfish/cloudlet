<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.logicfishsoftware.cloudlet</groupId>
		<artifactId>cloudlet</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>cloudlet-compiler</artifactId>
	<name>cloudlet-compiler</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<test.baseLocator>http://logicfishsoftware.com/tm/tests/0.1/owlets/helper-mojo/</test.baseLocator>
		<test.schemaLocation>src/test/resources/META-INF/tm/test.xtm</test.schemaLocation>
		<test.jarFile>test-owl.jar</test.jarFile>
		<test.packageName>com.logicfishsoftware.tm.tests</test.packageName>
		<test.ontologyOutputFile>test-out.owl</test.ontologyOutputFile>
	</properties>
	
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.directory}${file.separator}${test.jarFile}</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<!-- see http://jira.codehaus.org/browse/MNG-5346 -->
					<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
				</configuration>
				<executions>
					<execution>
						<id>mojo-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
					<!-- if you want to generate help goal - -> <execution> <id>help-goal</id> 
						<goals> <goal>helpmojo</goal> </goals> </execution> -->
				</executions>
			</plugin>

 
			<plugin>
				<groupId>com.logicfishsoftware.owlet</groupId>
				<artifactId>helper-mojo</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<executions>
					<execution>
						<id>generate-tm-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>aranuka-compiler</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<baseLocator>${test.baseLocator}</baseLocator>
							<schemaLocation>${test.schemaLocation}</schemaLocation>
							<packageName>${test.packageName}</packageName>
						</configuration>
					</execution>
					<execution>
						<id>generate-owl-jar</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>owl-compiler</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<ontologyFiles><file>src/test/resources/META-INF/ontologies</file></ontologyFiles>
							<outputFile>${project.build.directory}${file.separator}${test.jarFile}</outputFile>
						</configuration>
					</execution>
					
					<execution>
						<id>generate-object-repos</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>sesame-object-repository</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<repositoryManager>target/repositories</repositoryManager>
							<repositoryId>test-sesame</repositoryId>
							<templateUrl>file:src/test/resources/test-repos.ttl</templateUrl>
							<ontologyFiles>
								<file>src/test/resources/META-INF/ontologies/prov-o.owl</file>
							</ontologyFiles>
							<outputFile>${project.build.directory}${file.separator}${test.ontologyOutputFile}</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
 			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${basedir}/target/generated-sources/aranuka-compiler</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>

		<repository>
			<id>TMLab public</id>
			<url>http://maven.topicmapslab.de/public</url>
		</repository>

		<repository>
			<!-- Code model snapshot repo -->
			<id>Sonatype</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>

		<repository>
			<id>Adjuna Public Repository</id>
			<url>http://repo.aduna-software.org/maven2/releases/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>de.topicmapslab.majortom</groupId>
			<artifactId>majortom-inMemory</artifactId>
			<version>1.2.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.topicmapslab.genericeditorsdk</groupId>
			<artifactId>codegenerator</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>de.topicmapslab.aranuka</groupId>
			<artifactId>aranuka-connector-majortom</artifactId>
			<version>1.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>de.topicmapslab.aranuka</groupId>
			<artifactId>aranuka-runtime</artifactId>
			<version>1.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.openrdf.alibaba</groupId>
			<artifactId>alibaba-repository-object</artifactId>
			<version>2.0-rc7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>3.2</version>
			<!-- annotations are not needed for plugin execution so you can remove 
				this dependency for execution with using provided scope -->
			<scope>provided</scope>
		</dependency>
		<!-- generated help mojo has a dependency to plexus-utils -->
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>3.0.1</version>
		</dependency>
	</dependencies>
</project>
